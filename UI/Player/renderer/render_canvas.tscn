[gd_scene load_steps=15 format=3 uid="uid://cl7yicich6rhc"]

[ext_resource type="Script" uid="uid://x2v6oqsje4d7" path="res://UI/Player/renderer/render_canvas.gd" id="1_8ji3a"]
[ext_resource type="PackedScene" uid="uid://bk6kchpbd5gk3" path="res://UI/Player/player.tscn" id="2_th6co"]
[ext_resource type="Material" uid="uid://b13lqyfyyffyj" path="res://materials/final_Mono.tres" id="3_80el8"]
[ext_resource type="Script" uid="uid://d4lj27l7v5era" path="res://UI/Player/renderer/color_shader.gd" id="4_dfqqv"]
[ext_resource type="Material" uid="uid://ba14cyrfsfjxj" path="res://materials/final_no_palette.tres" id="5_mctlu"]

[sub_resource type="Environment" id="Environment_ilbuc"]
background_mode = 1
background_color = Color(0, 0.960784, 0.819608, 1)
ambient_light_source = 1
ambient_light_color = Color(1, 1, 1, 1)
reflected_light_source = 1

[sub_resource type="Shader" id="Shader_8i06e"]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform sampler2D view : repeat_disable, filter_nearest;
uniform float thresh = 0.1;

void fragment(){
	vec4 scr = texture(view,UV);
	float alpha = scr.a;
	if (alpha < thresh){
		alpha = 0.0;
	}
	else {
		alpha = 1.0;
	}
	COLOR.rgb = scr.rgb;
	COLOR.a = alpha;
}"
metadata/_edit_res_path = "res://materials/normal_material.tres::Shader_ia18y"

[sub_resource type="ViewportTexture" id="ViewportTexture_8i06e"]
viewport_path = NodePath("first_render/Viewport")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_c8irp"]
resource_local_to_scene = true
shader = SubResource("Shader_8i06e")
shader_parameter/view = SubResource("ViewportTexture_8i06e")
shader_parameter/thresh = 0.5

[sub_resource type="Shader" id="Shader_ovm27"]
code = "shader_type canvas_item;
render_mode blend_mix;
// filter_nearest so you don't get weird ghost palette colors!!
uniform sampler2D palette: filter_nearest;
uniform sampler2D view : repeat_disable, filter_nearest;
uniform float alpha_thresh= 0.1;

void fragment()
{
    vec3 source_col = texture(view, SCREEN_UV).rgb;
    float alph = texture(view, SCREEN_UV).a;
    vec3 closest_col = vec3(0.0);
    float smallest_error = 10.0;

    int palette_size = textureSize(palette, 0).x;
    float palette_pixel_size = 1.0 / float(palette_size);
    for (int x = 0; x < palette_size; x++)
    {
        vec3 palette_col = texture(palette, vec2(float(x) * palette_pixel_size, 0.0)).rgb;
        float error = distance(source_col, palette_col);
        if (error < smallest_error)
        {
            closest_col = palette_col;
            smallest_error = error;
        }
    }
	if (alph >= alpha_thresh){
		alph = 1.0;
	}
	else {
		alph = 0.0;
	}
    COLOR.rgb = closest_col;
    COLOR.a = alph;
}
"
metadata/_edit_res_path = "res://materials/final_palette.tres::Shader_ovm27"

[sub_resource type="Image" id="Image_mctlu"]
data = {
"data": PackedByteArray(0, 0, 0, 131, 131, 139, 222, 230, 238, 255, 255, 255, 123, 65, 65, 131, 90, 90, 156, 115, 115, 164, 164, 164, 189, 189, 189, 213, 213, 213, 197, 65, 65, 255, 98, 90, 222, 106, 98, 106, 90, 90, 164, 98, 90, 189, 148, 139, 222, 180, 164, 238, 213, 205, 238, 148, 115, 222, 148, 115, 255, 189, 131, 255, 197, 148, 255, 213, 180, 65, 57, 49, 205, 156, 82, 255, 197, 90, 189, 156, 90, 213, 180, 106, 189, 189, 131, 222, 205, 131, 238, 230, 164, 57, 82, 0, 57, 139, 49, 131, 197, 98, 180, 255, 131, 24, 164, 106, 65, 180, 131, 115, 197, 164, 164, 213, 197, 82, 139, 197, 98, 172, 238, 115, 189, 246, 16, 32, 57, 24, 41, 82, 41, 57, 98, 74, 115, 172, 98, 164, 222, 41, 49, 90, 57, 74, 123, 156, 180, 222, 189, 205, 230, 65, 74, 106, 98, 98, 123, 65, 49, 65, 98, 65, 82, 205, 65, 82),
"format": "RGB8",
"height": 1,
"mipmaps": false,
"width": 56
}

[sub_resource type="ImageTexture" id="ImageTexture_750vi"]
image = SubResource("Image_mctlu")

[sub_resource type="ViewportTexture" id="ViewportTexture_80el8"]
viewport_path = NodePath("first_render/Viewport")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mctlu"]
resource_local_to_scene = true
shader = SubResource("Shader_ovm27")
shader_parameter/palette = SubResource("ImageTexture_750vi")
shader_parameter/view = SubResource("ViewportTexture_80el8")
shader_parameter/alpha_thresh = 0.5

[node name="RenderCanvas" type="Control"]
layout_mode = 3
anchors_preset = 0
script = ExtResource("1_8ji3a")
fps = 5

[node name="first_render" type="SubViewportContainer" parent="."]
layout_mode = 0
offset_right = 512.0
offset_bottom = 512.0

[node name="Viewport" type="SubViewport" parent="first_render"]
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 4

[node name="Player" parent="first_render/Viewport" instance=ExtResource("2_th6co")]
transform = Transform3D(-2.18557e-08, 0, 0.5, 0, 0.5, 0, -0.5, 0, -2.18557e-08, 0, 0, 0)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="first_render/Viewport"]
transform = Transform3D(0.5, -0.75, 0.433013, 0, 0.5, 0.866025, -0.866025, -0.433013, 0.25, 0, 0, 0.857771)

[node name="Camera3D" type="Camera3D" parent="first_render/Viewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.511, 10)
projection = 1
size = 2.0
near = 0.01

[node name="WorldEnvironment" type="WorldEnvironment" parent="first_render"]
environment = SubResource("Environment_ilbuc")

[node name="after_effect" type="SubViewportContainer" parent="."]
layout_mode = 0
offset_right = 512.0
offset_bottom = 512.0

[node name="after_viewport" type="SubViewport" parent="after_effect"]
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 4

[node name="ColorShader" type="ColorRect" parent="after_effect/after_viewport"]
unique_name_in_owner = true
visible = false
material = SubResource("ShaderMaterial_c8irp")
custom_minimum_size = Vector2(512, 512)
offset_right = 512.0
offset_bottom = 512.0
color = Color(0.286802, 0.333718, 0.0380431, 1)
script = ExtResource("4_dfqqv")
mono = ExtResource("3_80el8")
no_palette = ExtResource("5_mctlu")
palette = SubResource("ShaderMaterial_mctlu")
normal = SubResource("ShaderMaterial_c8irp")

[node name="Camera2D" type="Camera2D" parent="after_effect/after_viewport"]
anchor_mode = 0

[node name="palette" type="Sprite2D" parent="."]
position = Vector2(11, 502)
