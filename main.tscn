[gd_scene load_steps=18 format=3 uid="uid://7cj62niu6y0m"]

[ext_resource type="Script" uid="uid://jd34kvo3xbma" path="res://main.gd" id="1_kmhnd"]
[ext_resource type="PackedScene" uid="uid://cq03c8lxhl22t" path="res://UI/generic/file_dialog_button/file_dialog_button.tscn" id="2_1xgvu"]
[ext_resource type="PackedScene" uid="uid://cl7yicich6rhc" path="res://UI/Player/renderer/render_canvas.tscn" id="3_272bh"]
[ext_resource type="PackedScene" uid="uid://cccn4mrilxa6b" path="res://UI/Menu/animation_controller/animation_controller.tscn" id="4_5vw27"]
[ext_resource type="PackedScene" uid="uid://pyshfx6b4diu" path="res://UI/Menu/viewport_controller/viewport_controller.tscn" id="4_272bh"]
[ext_resource type="PackedScene" uid="uid://bcqikq1wfgete" path="res://UI/Menu/material_controller/material_controller.tscn" id="5_46gs8"]
[ext_resource type="PackedScene" uid="uid://bu6ghsc6p3e5c" path="res://UI/Menu/render_controller/render_controller.tscn" id="6_7mycd"]

[sub_resource type="Shader" id="Shader_v7tjv"]
code = "shader_type canvas_item;

uniform sampler2D view : repeat_disable, filter_nearest;
uniform float limit = 1.0;
uniform float thresh = 0.1;

void fragment(){
	float offset = 0.0;
	 vec4 scr = texture(view,UV);
	if (scr.r >= 0.01 && scr.g >= 0.01 && scr.b >= 0.01){
		scr.rgb = vec3(1.0);
	}
	else {
		scr.rgb = vec3(0.0);
	}
	float alpha = scr.a;
	if (alpha < thresh){
		alpha = 0.0;
	}
	else {
		alpha = 1.0;
	}



	COLOR.rgb = scr.rgb;
	COLOR.a = alpha;
}"
metadata/_edit_res_path = "res://materials/final_Mono.tres::Shader_v7tjv"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_272bh"]
resource_local_to_scene = true
shader = SubResource("Shader_v7tjv")
shader_parameter/limit = 32.0
shader_parameter/thresh = 0.5

[sub_resource type="Shader" id="Shader_4u2f0"]
code = "shader_type canvas_item;

uniform sampler2D view : repeat_disable, filter_nearest;
uniform float limit = 32.0;
uniform float thresh = 0.5;

void fragment(){
	float offset = 0.5/limit;
	 vec4 scr = texture(view,UV);
	scr.r = float(int(scr.r*limit+offset))/limit;
	scr.b = float(int(scr.b*limit+offset))/limit;
	scr.g = float(int(scr.g*limit+offset))/limit;
	float alpha = scr.a;
	if (alpha < thresh){
		alpha = 0.0;
	}
	else {
		alpha = 1.0;
	}
	
	
	
	COLOR.rgb = scr.rgb;
	COLOR.a = alpha;
}"
metadata/_edit_res_path = "res://main.tscn::Shader_4u2f0"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kek77"]
resource_local_to_scene = true
shader = SubResource("Shader_4u2f0")
shader_parameter/limit = 32.0
shader_parameter/thresh = 0.5

[sub_resource type="Shader" id="Shader_ovm27"]
code = "shader_type canvas_item;
render_mode blend_mix;
// filter_nearest so you don't get weird ghost palette colors!!
uniform sampler2D palette: filter_nearest;
uniform sampler2D view : repeat_disable, filter_nearest;
uniform float alpha_thresh= 0.1;

void fragment()
{
    vec3 source_col = texture(view, SCREEN_UV).rgb;
    float alph = texture(view, SCREEN_UV).a;
    vec3 closest_col = vec3(0.0);
    float smallest_error = 10.0;

    int palette_size = textureSize(palette, 0).x;
    float palette_pixel_size = 1.0 / float(palette_size);
    for (int x = 0; x < palette_size; x++)
    {
        vec3 palette_col = texture(palette, vec2(float(x) * palette_pixel_size, 0.0)).rgb;
        float error = distance(source_col, palette_col);
        if (error < smallest_error)
        {
            closest_col = palette_col;
            smallest_error = error;
        }
    }
	if (alph >= alpha_thresh){
		alph = 1.0;
	}
	else {
		alph = 0.0;
	}
    COLOR.rgb = closest_col;
    COLOR.a = alph;
}
"
metadata/_edit_res_path = "res://materials/final_palette.tres::Shader_ovm27"

[sub_resource type="Image" id="Image_272bh"]
data = {
"data": PackedByteArray(0, 0, 0, 131, 131, 139, 222, 230, 238, 255, 255, 255, 123, 65, 65, 131, 90, 90, 156, 115, 115, 164, 164, 164, 189, 189, 189, 213, 213, 213, 197, 65, 65, 255, 98, 90, 222, 106, 98, 106, 90, 90, 164, 98, 90, 189, 148, 139, 222, 180, 164, 238, 213, 205, 238, 148, 115, 222, 148, 115, 255, 189, 131, 255, 197, 148, 255, 213, 180, 65, 57, 49, 205, 156, 82, 255, 197, 90, 189, 156, 90, 213, 180, 106, 189, 189, 131, 222, 205, 131, 238, 230, 164, 57, 82, 0, 57, 139, 49, 131, 197, 98, 180, 255, 131, 24, 164, 106, 65, 180, 131, 115, 197, 164, 164, 213, 197, 82, 139, 197, 98, 172, 238, 115, 189, 246, 16, 32, 57, 24, 41, 82, 41, 57, 98, 74, 115, 172, 98, 164, 222, 41, 49, 90, 57, 74, 123, 156, 180, 222, 189, 205, 230, 65, 74, 106, 98, 98, 123, 65, 49, 65, 98, 65, 82, 205, 65, 82),
"format": "RGB8",
"height": 1,
"mipmaps": false,
"width": 56
}

[sub_resource type="ImageTexture" id="ImageTexture_750vi"]
image = SubResource("Image_272bh")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4c57u"]
resource_local_to_scene = true
shader = SubResource("Shader_ovm27")
shader_parameter/palette = SubResource("ImageTexture_750vi")
shader_parameter/alpha_thresh = 0.5

[sub_resource type="Shader" id="Shader_8i06e"]
code = "shader_type canvas_item;

uniform sampler2D view : repeat_disable, filter_nearest;
uniform float thresh = 0.1;

void fragment(){
	vec4 scr = texture(view,UV);
	float alpha = scr.a;
	if (alpha < thresh){
		alpha = 0.0;
	}
	else {
		alpha = 1.0;
	}
	COLOR.rgb = scr.rgb;
	COLOR.a = alpha;
}"
metadata/_edit_res_path = "res://materials/normal_material.tres::Shader_ia18y"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_efxa6"]
resource_local_to_scene = true
shader = SubResource("Shader_8i06e")
shader_parameter/thresh = 0.5

[node name="Main" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource("1_kmhnd")
file_button_path = NodePath("Mount/MarginContainer/MainWindow/MenuBar/FileButton")
menu_button_path = NodePath("Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/RenderController/MenuButton")

[node name="Mount" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MarginContainer" type="MarginContainer" parent="Mount"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10

[node name="MainWindow" type="VSplitContainer" parent="Mount/MarginContainer"]
layout_mode = 2

[node name="MenuBar" type="HSplitContainer" parent="Mount/MarginContainer/MainWindow"]
layout_mode = 2

[node name="FileButton" parent="Mount/MarginContainer/MainWindow/MenuBar" instance=ExtResource("2_1xgvu")]
unique_name_in_owner = true
layout_mode = 2

[node name="HSplitContainer" type="HSplitContainer" parent="Mount/MarginContainer/MainWindow"]
layout_mode = 2
size_flags_vertical = 3

[node name="VSplitContainer" type="VSplitContainer" parent="Mount/MarginContainer/MainWindow/HSplitContainer"]
layout_mode = 2

[node name="PanelContainer" type="PanelContainer" parent="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer"]
custom_minimum_size = Vector2(600, 512)
layout_mode = 2
size_flags_vertical = 3

[node name="RenderCanvas" parent="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer" instance=ExtResource("3_272bh")]
unique_name_in_owner = true
layout_mode = 2

[node name="FrameSizeLabel" type="Label" parent="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer"]
layout_mode = 2
size_flags_horizontal = 8
size_flags_vertical = 8
text = "512x512"

[node name="AnimationController" parent="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer" instance=ExtResource("4_5vw27")]
layout_mode = 2

[node name="PanelContainer" type="PanelContainer" parent="Mount/MarginContainer/MainWindow/HSplitContainer"]
custom_minimum_size = Vector2(500, 0)
layout_mode = 2
size_flags_horizontal = 4

[node name="VBoxContainer" type="VBoxContainer" parent="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer"]
layout_mode = 2
size_flags_horizontal = 4
theme_override_constants/separation = 18

[node name="ViewportController" parent="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer" instance=ExtResource("4_272bh")]
unique_name_in_owner = true
layout_mode = 2

[node name="MaterialController" parent="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer" instance=ExtResource("5_46gs8")]
layout_mode = 2
mono = SubResource("ShaderMaterial_272bh")
no_palette = SubResource("ShaderMaterial_kek77")
palette = SubResource("ShaderMaterial_4c57u")
normal = SubResource("ShaderMaterial_efxa6")

[node name="RenderController" parent="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer" instance=ExtResource("6_7mycd")]
layout_mode = 2

[connection signal="camera_node_transform_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" to="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/ViewportController" method="_on_render_canvas_camera_node_transform_changed"]
[connection signal="player_node_animations_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/AnimationController" method="_on_render_canvas_player_node_animations_changed"]
[connection signal="player_node_transform_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" to="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/ViewportController" method="_on_render_canvas_player_node_transform_changed"]
[connection signal="play_animation" from="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/AnimationController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_animation_controller_play_animation" binds= [false]]
[connection signal="test_animation" from="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/AnimationController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_animation_controller_play_animation" binds= [true]]
[connection signal="camera_transform_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/ViewportController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_viewport_options_camera_transform_changed"]
[connection signal="player_transform_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/ViewportController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_viewport_options_player_transform_changed"]
[connection signal="color_shader_active" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/MaterialController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_material_conntroller_color_shader_active"]
[connection signal="material_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/MaterialController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_material_conntroller_material_changed"]
[connection signal="render_file_name_pattern_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/RenderController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_render_controller_render_file_name_pattern_changed"]
[connection signal="render_single_file_animation_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/RenderController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_render_controller_render_single_file_animation_changed"]
[connection signal="render_start" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/RenderController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_render_options_render_start"]
[connection signal="render_state_changed" from="Mount/MarginContainer/MainWindow/HSplitContainer/PanelContainer/VBoxContainer/RenderController" to="Mount/MarginContainer/MainWindow/HSplitContainer/VSplitContainer/PanelContainer/RenderCanvas" method="_on_render_options_render_state_changed"]
